{"version":3,"sources":["index.ios.tsx"],"names":["ActionSheet","flex","React","Children","only","props","children","options","onSelect","iosOptions","title","undefined","message","ActionSheetIOS","showActionSheetWithOptions","Component"],"mappings":"gzBAAA,oDACA,yC,m2BASqBA,CAAAA,W,wVACV,CACP,MAAO,qBAAC,iBAAD,EAAM,KAAK,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAb,iDAA2BC,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoB,KAAKC,KAAL,CAAWC,QAA/B,CAA3B,CAAP,CACD,C,8EAE0BC,O,CAAgCC,Q,CAAoB,CAC7E,GAAMC,CAAAA,UAAiC,kBAClCF,OADkC,EAGrCG,KAAK,CAAEH,OAAO,CAACG,KAAR,EAAiBC,SAHa,CAIrCC,OAAO,CAAEL,OAAO,CAACK,OAAR,EAAmBD,SAJS,EAAvC,CAMAE,4BAAeC,0BAAf,CAA0CL,UAA1C,CAAsDD,QAAtD,EACD,C,yBAbsCN,KAAK,CAACa,S","sourcesContent":["import * as React from 'react';\nimport { ActionSheetIOS, View } from 'react-native';\nimport { ActionSheetIOSOptions } from '../types';\n\ninterface Props {\n  readonly children: React.ReactNode;\n}\n\ntype onSelect = (buttonIndex: number) => void;\n\nexport default class ActionSheet extends React.Component<Props> {\n  render() {\n    return <View style={{ flex: 1 }}>{React.Children.only(this.props.children)}</View>;\n  }\n\n  showActionSheetWithOptions(options: ActionSheetIOSOptions, onSelect: onSelect) {\n    const iosOptions: ActionSheetIOSOptions = {\n      ...options,\n      // A null title or message on iOS causes a crash\n      title: options.title || undefined,\n      message: options.message || undefined,\n    };\n    ActionSheetIOS.showActionSheetWithOptions(iosOptions, onSelect);\n  }\n}\n"]}